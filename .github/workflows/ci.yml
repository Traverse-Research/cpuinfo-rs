name: CI

on:
  push:

jobs:
  rust:
    name: Lint Rust code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: Cargo fmt
        run: cargo fmt --all -- --check
      - name: Cargo clippy
        run: cargo clippy --workspace --all-targets -- -D warnings

  rust-msrv:
    name: Build-test MSRV (1.74) with minimal crate dependencies
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, macos-13]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - uses: dtolnay/rust-toolchain@nightly
      - name: Generate minimal-version dependencies
        run: cargo -Zminimal-versions generate-lockfile
      # The latest bindgen release has an underspecified proc-macro2 dependency: https://github.com/rust-lang/rust-bindgen/issues/3149
      - name: Update proc-macro2 to 1.0.80
        run: cargo update -p proc-macro2 --precise 1.0.80
      - uses: dtolnay/rust-toolchain@1.74.0
      - name: Cargo check
        run: cargo check --workspace --all-targets

  cross:
    name: ${{ matrix.name }} (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    env:
      PROGRAM: ${{ matrix.cross && 'cross' || 'cargo' }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            name: Linux AMD64
            target: x86_64-unknown-linux-gnu
            cross: false
            test: true

          - os: macos-latest
            name: macOS
            target: x86_64-apple-darwin
            cross: false
            test: true

          - os: windows-latest
            name: Windows AMD64
            target: x86_64-pc-windows-msvc
            cross: false
            test: true

          # Disabled because u_int is undefined in freebsd headers
          # - os: ubuntu-latest
          #   name: FreeBSD
          #   target: x86_64-unknown-freebsd
          #   cross: true
          #   test: false

          - os: macos-latest
            name: macOS
            target: aarch64-apple-darwin
            cross: false
            test: true

          - os: ubuntu-latest
            name: Android
            target: aarch64-linux-android
            cross: true
            test: true

          - os: ubuntu-latest
            name: Linux AARCH64
            target: aarch64-unknown-linux-gnu
            cross: true
            test: true

          - os: ubuntu-latest
            name: Linux ARMv7
            target: armv7-unknown-linux-gnueabihf
            cross: true
            test: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          
      - name: Bootstrap
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross
        run: cargo install cross
        if: ${{ matrix.cross }}

      - name: Build
        run: ${{ env.PROGRAM }} build --target=${{ matrix.target }}

      - name: Test
        run: ${{ env.PROGRAM }} test --target=${{ matrix.target }}
        if: ${{ matrix.test }}
      
      - name: Run example
        if: ${{ !matrix.cross }}
        run: cargo run --example info
      - uses: actions/upload-artifact@v4
        if: ${{ !matrix.cross }}
        with:
          name: info-${{ matrix.target }}
          path: info.txt
